{"version":3,"file":"index.86da81c4.js","sources":["../../vite/modulepreload-polyfill","../../src/js/sanctuary.js","../../src/js/types.js","../../src/js/main.js"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import sanctuary from 'sanctuary';\nimport $         from 'sanctuary-def';\nimport show      from 'sanctuary-show';\nimport * as F    from 'fluture';\nimport {\n  env as flutureEnv\n}                from 'fluture-sanctuary-types';\n\n\nconst $Event = $.NullaryType\n  ('Event')\n  ('https://devdocs.io/dom/event')\n  ([])\n  (x => Object.prototype.toString.call (x) === '[object Event]');\n\n\nconst S = sanctuary.create ({\n\tcheckTypes: import.meta.env.DEV,\n  env: sanctuary.env.concat (flutureEnv).concat ($Event)\n});\n\nexport { S,\t$, F, show };\n","import { $ } from './sanctuary.js';\n\n//    createEnum :: String -> Array String -> Type\nconst createEnum = name => values => $.EnumType\n  (name)\n  ('')\n  (values)\n\n//    $DateIso :: NullaryType\nconst $DateIso = (\n  $.NullaryType ('DateIso')\n                ('https://www.w3.org/QA/Tips/iso-date')\n                ([$.String])\n                (x => {\n                  // debugger;\n                  return /^\\d{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2]\\d|3[0-1])$/.test (x)\n                })\n);\n\n//    $Email :: NullaryType\nconst $Email = (\n  $.NullaryType ('Email')\n                ('https://datatracker.ietf.org/doc/html/rfc5322#section-3.4.1')\n                ([$.String])\n                (x => {\n                  // debugger;\n                  return /^[A-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[A-Z0-9](?:[A-Z0-9-]{0,61}[A-Z0-9])?(?:\\.[A-Z0-9](?:[A-Z0-9-]{0,61}[A-Z0-9])?)*$/i.test (x)\n                })\n);\n\nexport {\n  createEnum,\n  $DateIso,\n  $Email\n};\n","import '../style.css';\n\nimport {\n  S,\n  $,\n  F,\n  show\n} from './sanctuary.js';\n\n// import {\n//   run,\n//   modify\n// } from 'monastic';\n\nimport {\n  $DateIso,\n  $Email,\n  createEnum\n} from './types.js';\n\nconst trace = msg => x => (console.debug (`[${msg}]:`, x), x);\n\n//    $$ :: String -> Array HtmlElement\nconst $$ = s => document.querySelectorAll (s);\n\n//    $1 :: String -> HtmlElement\nconst $1 = s => document.querySelector (s);\n\n//    eitherToFuture :: Either a b -> Future a b\nconst eitherToFuture = S.either (F.reject) (F.resolve);\n\n//    setProperty :: Object -> String -> a -> a\nconst setProperty = object => prop => value => (object[prop] = value, value);\n\n//    hideSideEffect :: (a -> b) -> a -> a\nconst hideSideEffect = f => a => (f (a), a);\n\n\n// -- MODEL\n\nconst $Inquiry =$.RecordType ({\n  name: $.NonEmpty ($.String),\n  email: $Email,\n  date: $.NonEmpty ($DateIso),\n  eventType: createEnum ('EventType')\n                        (['Corporate event', 'Birthday', 'Other']),\n  details: $.String,\n  signup: $.Boolean\n});\n\nconst Model = {\n  name: '',\n  email: '',\n  date: '',\n  eventType: '',\n  details: '',\n  signup: false\n}\n\n// const State = {\n//   ...Model,\n//   'submit': false\n// }\n\n//    validation :: Model -> Either (Array ValidationError) a\nconst validation = $.validate ($Inquiry);\n\n\n// -- VIEW\n\nconst HtmlForm             = $1 ('form[name=\"inquiry\"]');\nconst HtmlValidationOutput = $1 ('#validationOutput');\nconst HtmlSubmit           = $1 ('[type=\"submit\"]');\nconst HtmlFormError        = HtmlForm.querySelector ('.formError');\nconst HtmlNameError        = HtmlForm.querySelector ('.nameError');\nconst HtmlEmailError       = HtmlForm.querySelector ('.emailError');\nconst HtmlDateError        = HtmlForm.querySelector ('.dateError');\nconst HtmlEventTypeError   = HtmlForm.querySelector ('.eventTypeError');\n// fields\nconst HtmlName             = $1 ('[name=\"name\"]');\nconst HtmlEmail            = $1 ('[name=\"email\"]');\nconst HtmlDate             = $1 ('[name=\"date\"]');\nconst HtmlEventType        = $1 ('[name=\"eventType\"]');\nconst HtmlDetails          = $1 ('[name=\"details\"]');\nconst HtmlSignup           = $1 ('[name=\"signup\"]');\n\nconst HtmlFields = [HtmlName, HtmlEmail, HtmlDate, HtmlEventType, HtmlDetails, HtmlSignup];\n\n//    update :: HtmlElement -> Model\nconst update = ({target}) => {\n  switch (target) {\n    case HtmlName:\n      Model.name = S.trim (target.value);\n      break;\n\n    case HtmlEmail:\n      Model.email = S.trim (target.value);\n      break;\n\n    case HtmlDate:\n      Model.date = target.value;\n      break;\n\n    case HtmlEventType:\n      Model.eventType = target.value;\n      break;\n\n    case HtmlDetails:\n      Model.details = S.trim (target.value);\n      break;\n\n    case HtmlSignup:\n      Model.signup = Boolean (target.checked);\n      break;\n\n    default:\n      throw new TypeError ('update :: Unhandled HtmlElement ' + target.name || target.id || target.className);\n  }\n\n  return Model;\n};\n\n//    displayError :: String -> HtmlElement -> Void\nconst displayError = text => HtmlElement => {\n  switch (HtmlElement) {\n    case HtmlFormError:\n    case HtmlNameError:\n    case HtmlEmailError:\n    case HtmlDateError:\n    case HtmlEventTypeError:\n      HtmlElement.textContent = text;\n      HtmlElement.classList.remove ('invisible');\n      break;\n\n    case HtmlName:\n    case HtmlEmail:\n    case HtmlDate:\n    case HtmlEventType:\n      HtmlElement.setCustomValidity (text);\n      break;\n\n    default:\n      throw new TypeError ('displayError :: Unhandled HtmlElement');\n  }\n};\n\n\n// -- VALIDATION\n\n//    ErrorDictionary :: StrMap\nconst ErrorDictionary = {\n  $$: 'You have invalid form inputs',\n  name: 'Name is required',\n  email: 'Email is required and must be a valid email address',\n  date: 'An event date is required',\n  eventType: 'We currently do not do weddings',\n};\n\nconst HtmlLookup = {\n  $$: [HtmlFormError],\n  name: [HtmlName, HtmlNameError],\n  email: [HtmlEmail, HtmlEmailError],\n  date: [HtmlDate, HtmlDateError],\n  eventType: [HtmlEventType, HtmlEventTypeError],\n};\n\n//    formatErrors :: Array ValidationError -> StrMap\nconst formatErrors = S.pipe ([\n  S.map (error => {\n    let text = ErrorDictionary[error.name];\n\n    return text === undefined\n      ? S.Nothing\n      : S.Just ({ name: error.name, text });\n  }),\n  S.reduce (accu => S.maybe (accu)\n                            (e => (S.insert (e.name) (e.text) (accu))))\n           ({}),\n]);\n\n//    viewValidation :: Either (Array ValidationError) a -> Maybe StrMap\nconst viewValidation = (\n  S.either (S.compose (S.Just) (formatErrors))\n           (S.K (S.Nothing))\n);\n\n// TODO: should not handle disable/enable of submit\n//    dispatchErrors :: Maybe StrMap -> Maybe StrMap\nconst dispatchErrors = S.pipe ([\n  S.map (S.pairs),\n  S.map (S.map (hideSideEffect (\n    S.pair (key => text => {\n      return S.map (displayError (text)) (HtmlLookup[key]);\n    })\n  ))),\n  trace ('after displayError'),\n  S.ifElse (S.isNothing)\n           (hideSideEffect (() => HtmlSubmit.disabled = false))\n           (hideSideEffect (() => HtmlSubmit.disabled = true)),\n]);\n\n\n\n// -- MAIN\n\n//    init :: Array (HtmlElement) -> Model\nconst init = S.pipe ([\n  S.map (S.singleton ('target')),\n  S.map (update)\n]);\n\n//    outputValidation :: a -> a\nconst outputValidation = hideSideEffect (S.pipe ([\n  show,\n  setProperty (HtmlValidationOutput) ('textContent')\n]));\n\n//    main :: ChangeEvent -> Future (Array ValidationError) a\nconst main = S.pipe ([\n  F.encase (update),                     // Future Error Model\n  trace ('after update'),\n  S.map (trace ('map after update')),\n  F.chain (F.encase (validation)),       // Future Error Either (Array ValidationError) a\n  F.chain (F.encase (outputValidation)), // Future Error Either (Array ValidationError) a\n  F.chain (F.encase (viewValidation)),   // Future Error Maybe StrMap\n  F.chain (F.encase (dispatchErrors))    // Future Error Maybe StrMap\n]);\n\nconst fork = F.fork (console.error)\n                    (console.debug);\n\n// TODO: make init work with queryStrings e.g. ?name=Jon&email=jon.ronnenberg%40gmail.com&date=2022-01-08&eventType=Corporate+event&details=&signup=on\ninit (HtmlFields);\n\nHtmlForm.addEventListener ('change',\n  S.compose (fork)\n            (main)\n);\n\n// debugging\ntrace ('model') (Model)\n"],"names":["flutureEnv","F.reject","F.resolve","F.encase","F.chain","F.fork"],"mappings":"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"}